Техническое задание под Windows10

1. Наименование программы: "Generator Ethereum Seeds Addresses (GESA_1.0)" 
1.1. В ходе тестирования и фиксации багов, создается каждая последующая версия GESA_1.1, GESA_1.2 и т.д.
1.2. Если в ходе дальнейшей разработки/оптимизации разработчиком будут внесены кардинальные изменения в работе программы, то версия может быть переведена на следующий уровень GESA_2.0 и т.д.

2. Назначение программы: программа предназначена для быстрой и последовательной генерации индексов и адресов в сети Ethereum, выведения определенной информации в консоль (ход работы программы), записи результата в указанный файл и протоколирование достигнутых результатов в отдельный журнал.
2.1. Цель разработки: создание алгоритма с очень высокой производительностью, вследствие внедрения мультипоточности и оптимизации процессов. При этом скорость играет решающее значение. 

3. Базовые условия:
3.1. Программа должна использовать:
3.1.1. Стандарт BIP39 (Первоисточник: https://github.com/iancoleman/bip39) .
3.1.2. Словарь BIP39 из 2048 (английских) слов.
3.1.3. Мнемоническую фразу (сид-фразу, семеную фразу) из 12 слов, для генерации соответсвующих ключей и адреса(ов) (Видео: обзор конвертера #iancolman Часть_1: https://youtu.be/nYd5_IEMvI8 Часть_2: https://youtu.be/n6bkK_Av2sk?list=PLuP9kN5Mh0TRZkaCnwuGXnGvjifqGFCyT).
3.1.4. Возможность создания производных адресов (Derived Addresses, Видео: Читаем пути в HD кошельках (BIP44)  https://youtu.be/qby0Zz1GK_I?list=PLuP9kN5Mh0TRZkaCnwuGXnGvjifqGFCyT)

3.2. С целью начальной оптимизации процесса генерации словарь BIP39 из 2048 слов конвертируется в соответствующие числовые значения, т.е. индексы от 0 до 2047.
3.3. Таким образом мнемоническая фраза (сид-фраза) строится путем вложения 12-ти числовых индексов (значений) из словаря BIP39 в 12-ть регистров.
3.3.1. Значение индекса в регистре №12 определяется отдельно и является контрольной суммой из 11 предыдущих индексов (Видео: Как создается мнемоническая фраза? (Seed) https://youtu.be/skLvrhv8etU).

3.4. В процессе разработки программы тестирование валидности выходных данных в ходе работы алгоритма производится с помощью сайта https://iancoleman.io/bip39/. 
3.4.1. Из сгенерированного программой GESA результирующего файла берется выборочно строка индексов и конвертируется в слова из словаря BIP39, получая при этом сид-фразу (мнемоническую фразу).
3.4.2. Сид-фраза проверяется в специальном окне "BIP39 Mnemonic". 
3.4.2.1. Сайт калькулирует список слов из сид-фразы, если последнее (проверочное) слово из 12 регистра правильное.
3.4.2.2. Сайт выдает ошибку "Invalid mnemonic", если последнее (проверочное) слово из 12 регистра не соответствует проверочному алгоритму (см. п.3.3.1.).
3.4.3. Derivation Path должно соответствовать: m/44'/60'/0'/0/0 
3.4.4. В случае правильной работы алгоритма сиды и адреса должны быть идентичны BIP39  как в результирующем файле (индекс, адрес) так и на сайте (слова, адрес).

3.5. Программа должна работать циклично, т.е. выполнять серии циклов генераций.
3.5.1. Один цикл соответствует одному записанному результирующему файлу, согласно конфигурационного файла (см. п.6).

4. Расширения файлов, которые используются в разработке программы:
4.1. Результирующий файл - txt.
4.2. Файл Журнала циклов - csv.
4.3. Конфигурационный файл - config.
4.4. Программа GESA - exe и в файле(ах) с оригинальным кодом.

5. Условные обозначения, которые используются в разработке программы: 
5.1. НС - начальный сид из индексов (Initial seed);
5.2. ПС – последний сид из индексов (Last seed);
5.3. КГС - количество генерируемых сидов(индексов);
5.4. ГЛУ - глубина в каждом генерируемом сиде (количество производных адресов);
5.5. КСФ – количество строк в файле/цикле (например: 1048576 строк - 1 файл записан);
5.6. КЛЦ - количество циклов генерации сидов;
5.7. Ц - номер цикла по счету;
5.8. ОКА – общее количество сгенерированных адресов с начала генерации первого цикла (циклов например 3, то получается ОКА = КСФ * 3 цикла =1048576*3=3145728 адресов сгенерированных с начала генерации первого цикла);
5.9. ЗНФ - заглавие в названии файла (могут использоваться числа и буквы) для создания полного названия файла, в который будет сохраняться результат одного цикла;
5.10. П  - промежуток, переменная (по умолчанию = 0, но могут использоваться числа и буквы);
5.11. _ - знак нижнего подчеркивания, соединяет сформированное заглавие в названии файла и начальный сид из индексов в полное название файла; 
5.12. ПНФ - полное название файла, в который будут сохраняться результаты генерации;
5.13. ФР – файл результата с данными генерации в одном цикле;
5.14. ДВЦ – дата и время начала цикла генераций;
5.15. ДВФ – дата и время последнего сохранения файла (как правило, в конце каждого цикла в журнале циклов генерации);
5.16. ВГ – время генерации данного цикла;
5.17. ОВ – общее время с начала генерации первого цикла;
5.18. НП - название папки для сохранения файлов в каждом цикле;
5.19. ЖЦ - журнал циклов генерации;
5.20. НПЖЦ - название папки для сохранения файла ЖЦ;
5.21. mcycles_ - заголовок файла ЖЦ;
5.22. НЦ – начало цикла;
5.23. КИП - количество используемых потоков (в зависимости от технических характеристик и возможностей процессора);
5.24. КСК - количество сидов в консоли (при достижении во время генерации данного количества сидов из индексов в консоли делается запись о ходе работы программы; запись в ФР после каждого третьего КСК).
5.25. СКР - скорость генерации адресов в секунду (КСФ/ВГ).


6. Конфигурационный файл должен включать в себя: 
6.1. НС (начальный сид из индексов): пример -  1927-1665-1938-396-1128-859-1227-1292-1969-712-1968-0; (12 регистр - не обязательно "0")
6.2. КГС (количество генерируемых сидов) из этого сида-индексов: пример - 349524;
6.3. ГЛУ (глубина в каждом генерируемом сиде) из одного сида-индекса: пример - 3;
6.4. КЛЦ (количество циклов генерации сидов): пример - 20;
6.5. НП (название папки для сохранения файлов в каждом цикле): пример – Red;
6.6. ЗНФ (заглавие названия файла): пример - sg61;
6.7. П (промежуток): пример - 0;
6.8. НПЖЦ (название папки для сохранения файла ЖЦ Журнала циклов генерации): пример – Green;
6.9. НЦ (номер цикла, после которого начинается следующая серия циклов; нужен для точного ведения ЖЦ): пример - 0;
6.10. КСК (количество сидов в консоли): пример - 16384.
6.10. КИП (количество используемых потоков процессором во время генерации): пример - 8.


7. Этапы работы программы:

7.1. Создание папки НП
Пример: Red

7.2. Создание ПНФ 
7.2.1. Название файла формируется (складывается) следующим образом: ЗНФ+П+Ц+_+НС+.txt; 
sg61+0+1+_+1927-1665-1938-396-1128-859-1227-1292-1969-712-1968-0+.txt

Пример:
sg6101_1927-1665-1938-396-1128-859-1227-1292-1969-712-1968-0.txt

7.3. Порядок записи в ФР 
7.3.1. В каждой строке записывается: сид из индексов через тире, запятая, сгенерированный адрес.

Пример:
1927-1665-1938-396-1128-859-1227-1292-1969-712-1968-2,0xECF4Ca1721D5D6Ecd1fe8E500d4Ed7D28aCBB2B9

7.4. Создание папки НПЖЦ 
Пример: Green

7.5. Создание названия файла ЖЦ
7.5.1. Название файла складывается следующим образом: mcycles_+ЗНФ+.csv; 
mcycles_+ sg61+.csv

Пример: mcycles_sg61.csv 

7.6. Порядок записи данных цикла в ЖЦ
7.6.1. Столбцы озаглавливаются в начале файла в следующем порядке: ПНФ, Ц, НС, ПС, ОКА, ОВ, ДВЦ, ДВФ, ВГ, СКР, КГС, ГЛУ, КСФ, КЛЦ.
7.6.2. Данные построчно вносятся в следующем формате:

Пример:
ПНФ - sg6101_1927-1665-1938-396-1128-859-1227-1292-1969-712-1968-0.txt
Ц - 1
НС - 1927-1665-1938-396-1128-859-1227-1292-1969-712-1968-0
ПС - 1927-1665-1938-396-1128-859-1227-1292-1969-714-602-1334
ОКА - 1048572
ОВ - 03:48:12
ДВЦ – 2023.04.22 10:21:44
ДВФ - 2023.04.22 14:09:56
ВГ – 03:48:12
СКР - 76,583
КГС - 349524
ГЛУ - 3
КСФ - 1048572
КЛЦ - 20


8. Пример запуска и общей логики работы программы:

Цикл №1:
Включается консоль (загрузка конфигурационного файла)
Создается НП с названием  Red
Создается  ФР с названием sg6101_1927-1665-1938-396-1128-859-1227-1292-1969-712-1968-0.txt
Создается НПЖЦ с названием Green
Создается ЖЦ с названием mcycles_sg61.csv 
Запускается генерация
Запись промежуточных данных в ФР
Окончание генерации
Сохранение файла sg6101_1927-1665-1938-396-1128-859-1227-1292-1969-712-1968-0.txt
Сохранение необходимых данных в файл mcycles_sg61.csv

Цикл №2:
Счетчик циклов прибавляет +1, т.е. Ц = 2
Из ЖЦ с названием mcycles_sg61.csv берем ПС (последний сид), пример: 1927-1665-1938-396-1128-859-1227-1292-1969-714-602-1334
Создается  ФР с названием sg6102_1927-1665-1938-396-1128-859-1227-1292-1969-714-602-1334.txt
Запускается генерация
Запись промежуточных данных в ФР
Окончание генерации
Сохранение файла sg6102_1927-1665-1938-396-1128-859-1227-1292-1969-714-602-1334.txt
Дописывание необходимых данных в файл mcycles_sg61.csv и его сохранение.

Цикл №3:
Счетчик циклов прибавляет +1, т.е. Ц = 3
Из ЖЦ с названием mcycles_sg61.csv берем ПС (последний сид), пример: 1927-1665-1938-396-1128-859-1227-1292-1969-715-1284-1335
Создается  ФР с названием sg6103_ 1927-1665-1938-396-1128-859-1227-1292-1969-715-1284-1335.txt
Запускается генерация
Запись промежуточных данных в ФР
Окончание генерации
Сохранение файла sg6103_ 1927-1665-1938-396-1128-859-1227-1292-1969-715-1284-1335.txt
Дописывание необходимых данных в файл mcycles_sg61.csv и его сохранение.

---//---
---//---
---//---

Цикл №20:
Счетчик циклов прибавляет +1, т.е. Ц = 20
Из ЖЦ с названием mcycles_sg61.csv берем ПС (последний сид), пример: 1927-1665-1938-396-1128-859-1227-1292-1969-****-****-****
Создается  ФР с названием sg61020_ 1927-1665-1938-396-1128-859-1227-1292-1969-****-****-****.txt
Запускается генерация
Запись промежуточных данных в ФР
Окончание генерации
Сохранение файла sg61020_ 1927-1665-1938-396-1128-859-1227-1292-1969-****-****-****.txt
Дописывание необходимых данных в файл mcycles_sg61.csv и его сохранение.

Конец работы программы


9. Консоль: 

9.1. При запуске программы в консоли появляется сообщение: 11:21:48 GESA_1.0 starting! Required libraries and dictionary loaded! 
9.2. В ходе работы,при достижении КСК, в консоли осуществляется информирование о суммарном количестве сгенерированных сидов и адресов в следующем формате:
9.2.1. Время.
9.2.2. КСК.
9.2.3. Количество созданных адресов (КСК * ГЛУ).

Пример:
11:22:08 - 16384 seeds, 49152 addresses generated.
11:22:28 - 32768 seeds, 98304 addresses generated.
11:22:48 - 49152 seeds, 147456 addresses generated.
>>> Saving data to a file... 
>>> Saved successfully!
11:23:08 - 65536 seeds, 196608 addresses generated.
11:23:28 - 81920 seeds, 245760 addresses generated.
11:23:48 - 98304 seeds, 294912 addresses generated.
>>> Saving data to a file... 
>>> Saved successfully!


9.3. При завершении каждого цикла, в консоли выводится следующее сообщение о количестве законченных циклов (Ц) из общего количества циклов генерации сидов (КЛЦ):

Пример:
>>> Saving data to a file... 
>>> Saved successfully! Cycle # 1/20

9.4. При завершении общего количества генерации циклов (КЛЦ) в консоли выводится следующее сообщение:

Пример:
>>> Saving data to a file... 
>>> Saved successfully! Cycle # 20/20
>>> Generation completed!
>>> Press any key to end...


Условные обозначения, которые используются в разработке программы: 

НС - начальный сид из индексов (Initial seed);
ПС – последний сид из индексов (Last seed);
КГС - количество генерируемых сидов(индексов);
ГЛУ - глубина в каждом генерируемом сиде (количество производных адресов);
КСФ – количество строк в файле (например: 1048576 строк - 1 файл записан);
КЛЦ - количество циклов генерации сидов;
Ц - номер цикла по счету;
ОКА – общее количество сгенерированных адресов с начала генерации первого цикла (циклов например 3, то получается ОКА = КСФ * 3 цикла =1048576*3=3145728 адресов сгенерированных с начала генерации первого цикла);
ЗНФ - заглавие в названии файла (могут использоваться числа и буквы) для создания полного названия файла, в который будет сохраняться результат одного цикла;
П  - промежуток, переменная (по умолчанию = 0, но могут использоваться числа и буквы);
_ - знак нижнего подчеркивания, соединяет сформированное заглавие в названии файла и начальный сид из индексов в полное название файла; 
ПНФ - полное название файла, в который будут сохраняться результаты генерации;
ФР – файл результата с данными генерации в одном цикле;
ДВЦ – дата и время начала цикла генераций;
ДВФ – дата и время последнего сохранения файла (как правило, в конце каждого цикла в журнале циклов генерации);
ВГ – время генерации данного цикла;
ОВ – общее время с начала генерации первого цикла;
НП - название папки для сохранения файлов в каждом цикле;
ЖЦ - журнал циклов генерации;
НПЖЦ - название папки для сохранения файла ЖЦ;
mcycles_ - заголовок файла ЖЦ;
НЦ – начало цикла;
КИП - количество используемых потоков (в зависимости от технических характеристик и возможностей процессора);
КСК - количество сидов в консоли (при достижении во время генерации данного количества сидов из индексов в консоли делается запись о ходе работы программы; запись в ФР после каждого третьего КСК).
СКР - скорость генерации адресов в секунду (КСФ/ВГ).